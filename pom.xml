<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.7.RELEASE</version>
    </parent>

    <groupId>com.wwx</groupId>
    <artifactId>docker-client</artifactId>
    <!--    <packaging>war</packaging>-->
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <lombok.version>1.18.6</lombok.version>
        <junit.version>4.12</junit.version>
        <mysql.version>8.0.12</mysql.version>
        <velocity.version>1.7</velocity.version>
        <mysql-connector-java.version>6.0.4</mysql-connector-java.version>
        <!--        <fastjson.version>1.2.8.sec04</fastjson.version>-->
        <fastjson.version>1.2.47</fastjson.version>
        <poi.version>4.0.1</poi.version>
        <poi-ooxml.version>4.0.1</poi-ooxml.version>
        <logback.version>1.2.3</logback.version>
        <druid-spring-boot-starter.version>1.1.9</druid-spring-boot-starter.version>
        <spring-boot-dependencies.version>2.1.7.RELEASE</spring-boot-dependencies.version>
    </properties>


    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot-dependencies.version}</version>
        </dependency>

        <!-- start docker-java -->
        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java</artifactId>
            <version>3.1.3</version>
        </dependency>
        <!-- end docker-java -->

        <!-- start k8s-java -->
        <!-- https://mvnrepository.com/artifact/io.fabric8/kubernetes-client -->
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
            <version>4.4.2</version>
        </dependency>
        <!-- end k8s-java -->

        <!-- start sftp -->
        <!-- https://mvnrepository.com/artifact/com.jcraft/jsch -->
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.55</version>
        </dependency>
        <!-- end sftp -->

        <!-- java linux -->
        <!-- https://mvnrepository.com/artifact/ch.ethz.ganymesprd/ganymed-ssh2 -->
        <dependency>
            <groupId>ch.ethz.ganymed</groupId>
            <artifactId>ganymed-ssh2</artifactId>
            <version>262</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <!-- java linux -->


        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.26</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>


        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <!--            <version>${fastjson.version}</version>-->
            <version>1.2.47</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector-java.version}</version>
        </dependency>
        <!--apache.commons-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>
        <!--lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
        </dependency>
        <dependency>
            <groupId>velocity-tools</groupId>
            <artifactId>velocity-tools</artifactId>
            <version>1.2</version>
        </dependency>

        <!--        excel解析，导入导出框架-->

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>2.0.5</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <!-- 去掉scope作用域，使用默认的compile，编译、测试、运行都有效的作用域 -->
            <!--<scope>test</scope>-->
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.6.RELEASE</version>
                <!--                <version>2.1.6.RELEASE</version>-->
                <configuration>
                    <!-- 指定该Main Class为全局的唯一入口 -->
                    <mainClass>com.kubernetes.Test</mainClass>
                    <!--       部署服务器时加上，测试     -->
                    <fork>true</fork>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                &lt;!&ndash;                <version>2.1.6.RELEASE</version>&ndash;&gt;-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifest>-->
<!--                            &lt;!&ndash; 指定该Main Class为全局的唯一入口 &ndash;&gt;-->
<!--                            <mainClass>com.kubernetes.Test</mainClass>-->
<!--                        </manifest>-->
<!--                    </archive>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-shade-plugin</artifactId>-->
<!--                <version>3.2.1</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; put your configurations here &ndash;&gt;-->
<!--                    <transformers>-->
<!--                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
<!--                            <mainClass>com.kubernetes.Test</mainClass>-->
<!--                        </transformer>-->
<!--                    </transformers>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>shade</goal>-->
<!--                        </goals>-->
<!--                        &lt;!&ndash; Additional configuration. &ndash;&gt;-->
<!--                        <configuration>-->
<!--                            <filters>-->
<!--                                <filter>-->
<!--                                    <artifact>*:*</artifact>-->
<!--                                    <excludes>-->
<!--                                        <exclude>META-INF/*.SF</exclude>-->
<!--                                        <exclude>META-INF/*.DSA</exclude>-->
<!--                                        <exclude>META-INF/*.RSA</exclude>-->
<!--                                    </excludes>-->
<!--                                </filter>-->
<!--                            </filters>-->
<!--                            &lt;!&ndash;                            <minimizeJar>true</minimizeJar>&ndash;&gt;-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.13</version>
                <configuration>
                    <imageName>${project.groupId}/${project.artifactId}:${project.version}</imageName>
                    <dockerDirectory>${project.build.outputDirectory}</dockerDirectory>
                    <resources>
                        <resource>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!--            &lt;!&ndash; Copying Allatori configuration file to 'target' directory.-->
            <!--           The destination file will be filtered (Maven properties used in configuration file will be resolved). &ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-resources-plugin</artifactId>-->
            <!--                <version>2.6</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>copy-and-filter-allatori-config</id>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>copy-resources</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <outputDirectory>${basedir}/target</outputDirectory>-->
            <!--                            <resources>-->
            <!--                                <resource>-->
            <!--                                    <directory>${basedir}/allatori</directory>-->
            <!--                                    <includes>-->
            <!--                                        <include>allatori.xml</include>-->
            <!--                                    </includes>-->
            <!--                                    <filtering>true</filtering>-->
            <!--                                </resource>-->
            <!--                            </resources>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->

            <!--            &lt;!&ndash; Running Allatori &ndash;&gt;-->
            <!--            <plugin>-->
            <!--                <groupId>org.codehaus.mojo</groupId>-->
            <!--                <artifactId>exec-maven-plugin</artifactId>-->
            <!--                <version>1.2.1</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>run-allatori</id>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>exec</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!--                    <executable>java</executable>-->
            <!--                    <arguments>-->
            <!--                        <argument>-Xms128m</argument>-->
            <!--                        <argument>-Xmx512m</argument>-->
            <!--                        <argument>-jar</argument>-->

            <!--                        &lt;!&ndash; Copy allatori.jar to 'allatori' directory to use the commented line &ndash;&gt;-->
            <!--                        &lt;!&ndash;                        <argument>${basedir}/../../../../lib/allatori.jar</argument>&ndash;&gt;-->
            <!--                        <argument>${basedir}/allatori/allatori.jar</argument>-->

            <!--                        <argument>${basedir}/allatori/allatori.xml</argument>-->
            <!--                    </arguments>-->
            <!--                </configuration>-->
            <!--            </plugin>-->



        </plugins>
    </build>

</project>